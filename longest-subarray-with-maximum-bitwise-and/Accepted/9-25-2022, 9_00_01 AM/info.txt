{"id":807942658,"question_id":2503,"lang":"cpp","lang_name":"C++","time":"2Â years","timestamp":1664074801,"status":10,"status_display":"Accepted","runtime":"202 ms","url":"/submissions/detail/807942658/","is_pending":"Not Pending","title":"Longest Subarray With Maximum Bitwise AND","memory":"89.8 MB","code":"class Solution {\npublic:\n    int longestSubarray(vector<int>& vc) {\n\n\tint Max = 0 ;\n\tfor (auto it : vc)\n\t{\n\t\tMax = max(Max , it);\n\t}\n\tvector<int>pos;\n\n\tint len = 0;\n\tfor (int i = 0 ; i < vc.size() ; i++)\n\t{\n\t\tif (vc[i] == Max) pos.push_back(i + 1);\n\t\telse\n\t\t{\n\t\t\tbool ok = true;\n\t\t\tfor (int j = 0 ; j < 32 ; j++)\n\t\t\t{\n\t\t\t\tif ( (Max & (1 << j)) != (vc[i] & (1 << j)) )\n\t\t\t\t\tok = false;\n\t\t\t}\n\t\t\tif (ok)\n\t\t\t\tpos.push_back(i + 1);\n\t\t}\n\t}\n\n\t\n\n\tint prev = 0 , cont = 0;\n\tfor (int i = 0 ; i < pos.size() ; i++)\n\t{\n\t\tif ( (pos[i] - 1) == prev )\n\t\t{\n\t\t\tcont++;\n\t\t\tprev = pos[i];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlen = max(len , cont);\n            prev = pos[i];\n\t\t\tcont = 1;\n\t\t}\n\t}\n\tlen = max(len , cont);\n\n\n\treturn len;\n\n}\n};","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"longest-subarray-with-maximum-bitwise-and","has_notes":false,"flag_type":1}