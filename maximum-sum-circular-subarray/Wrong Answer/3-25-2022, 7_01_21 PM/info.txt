{"id":667018346,"question_id":954,"lang":"cpp","lang_name":"C++","time":"2 years, 6 months","timestamp":1648213281,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/667018346/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maxSubarraySumCircular(vector<int>& nums) {\n        \n        int n = nums.size();\n        \n        int max_ase = nums[0] , cur_max = 0, min_ase = nums[0] , cur_min = 0 , total = 0 ;\n        for(int i=0;i<nums.size();i++)\n        {\n            cur_max = max(cur_max , cur_max + nums[i] );\n            max_ase = max(max_ase , cur_max);\n            \n            cur_min = min(cur_min , cur_min + nums[i]);\n            min_ase = min(min_ase , cur_min);\n            \n            total += nums[i];\n        }\n        \n        \n        return max(max_ase, total - min_ase );\n     \n        \n    }\n};","compare_result":"010000111110110111100111100000010000000000000000000000000000000000000000000000000000000000000000000000000001011","title_slug":"maximum-sum-circular-subarray","has_notes":false,"flag_type":1}