{"id":667011837,"question_id":954,"lang":"cpp","lang_name":"C++","time":"2 years, 6 months","timestamp":1648212168,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/667011837/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maxSubarraySumCircular(vector<int>& nums) {\n        \n        int n = nums.size();\n        vector<int>vc = nums;\n        for(auto it : vc)\n            nums.push_back(it);\n        \n        int max_ase = nums[0] , cur_max = 0 , idx = -1;\n        for(int i=0;i<nums.size();i++)\n        {\n            cur_max = cur_max + nums[i];\n            if(cur_max >= max_ase and (idx+n-1) <= i )\n            {\n                max_ase = cur_max;\n                idx = i;\n            }\n            if(cur_max < 0)\n            {\n                cur_max = 0;\n                idx = -1;\n            }\n        }\n        \n        \n        return max_ase;\n     \n        \n    }\n};","compare_result":"101011100011001000001010000001000001100110000101001000000001001000000000000000000000000000000000000000000000111","title_slug":"maximum-sum-circular-subarray","has_notes":false,"flag_type":1}