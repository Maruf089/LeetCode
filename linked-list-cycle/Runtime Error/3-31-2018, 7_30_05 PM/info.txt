{"id":147823968,"question_id":141,"lang":"cpp","lang_name":"C++","time":"6 years, 6 months","timestamp":1522503005,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/147823968/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        \n        ListNode* fast = head, *slow = head;\n        \n   while(fast!= NULL){\n     fast = fast->next->next;\n     slow = slow->next;\n     if(fast == slow){\n       return true;\n     }\n   }\n        return false;\n        \n    }\n};","compare_result":null,"title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}