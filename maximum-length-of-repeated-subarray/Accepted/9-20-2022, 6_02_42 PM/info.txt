{"id":804430842,"question_id":718,"lang":"cpp","lang_name":"C++","time":"2Â years","timestamp":1663675362,"status":10,"status_display":"Accepted","runtime":"400 ms","url":"/submissions/detail/804430842/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"16.1 MB","code":"class Solution {\npublic:\n    int dp[1003][1003];\n    int findLength(vector<int>& vc1, vector<int>& vc2) {\n        \n        int ans = 0;\n        for(int i = vc1.size()-1;i>=0;i--)\n        {\n            for(int j=vc2.size()-1;j>=0;j--)\n            {\n                if(vc1[i]==vc2[j])\n                    dp[i][j] = dp[i+1][j+1] + 1;\n                ans = max(ans , dp[i][j]);\n            }\n        }\n        return ans;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray","has_notes":false,"flag_type":1}