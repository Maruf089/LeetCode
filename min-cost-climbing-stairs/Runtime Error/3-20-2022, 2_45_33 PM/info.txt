{"id":663606786,"question_id":747,"lang":"cpp","lang_name":"C++","time":"2 years, 7 months","timestamp":1647765933,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/663606786/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"N/A","code":"class Solution {\npublic:\n    \n    int dp[1001];\n    \n    int solve(int i , vector<int>&cost)\n    {\n        if(i >= cost.size())\n        {\n            return 0;\n        }\n        \n        if(dp[i]==-1){\n            dp[i] =  cost[i] + min( solve(i+1 , cost ) , solve(i+2 , cost ) );\n            return dp[i];\n        }\n        \n        return dp[i];\n        \n    }\n    \n    int f(int n,vector<int>&cost)\n    {\n        if(n==cost.size()-1)\n            return cost[n];\n        else if(n>=cost.size())\n        return 0;\n        if(dp[n]==-1)\n        {\n            dp[n]=cost[n]+min ( f(n+1,cost) ,f(n+2,cost) );\n            return dp[n];\n        }\n        return dp[n];\n    }\n    \n    int minCostClimbingStairs(vector<int>& cost) {\n        \n        for(int i=0;i<=cost.size()+9;i++)\n            dp[i] = -1;\n        \n     //   return min(f(0,cost),f(1,cost));\n        \n        \n        int cal1 = solve(0 , cost );\n        cal1 = min(cal1 , solve(1 , cost ));\n        \n        return cal1;\n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}