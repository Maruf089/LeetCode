{"id":808003295,"question_id":2505,"lang":"cpp","lang_name":"C++","time":"2Â years","timestamp":1664078603,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/808003295/","is_pending":"Not Pending","title":"Number of Good Paths","memory":"N/A","code":"class Solution {\npublic:\n   \n    \n            vector<int>vc[100000];\nint numberOfGoodPaths(vector<int>& vals, vector<vector<int>>& edges) {\n\n\tfor (auto it : edges)\n\t{\n\t\tvc[it[0]].push_back(it[1]);\n\t\tvc[it[1]].push_back(it[0]);\n\t}\n\n\tqueue<int>Q;\n\tQ.push(0);\n\tunordered_map<int, int>mp, cnt , leaf;\n\tmp[0] = vals[0];\n\tleaf[0]++;\n\n\twhile (Q.size())\n\t{\n\t\tauto P = Q.front();\n\t\tQ.pop();\n\t\tfor (auto it : vc[P])\n\t\t{\n\t\t\tif (mp[it] == 0)\n\t\t\t{\n\t\t\t\tmp[it] = max(vals[it] , vals[P]);\n\t\t\t\tQ.push(it);\n\t\t\t}\n\t\t}\n\n\t\tif (vc[P].size() == 1)\n\t\t\tleaf[P]++;\n\t}\n\n\n\tfor (auto it : mp)\n\t{\n\t\tif (it.second == vals[it.first])\n\t\t\tcnt[it.second]++;\n\t}\n\n\tint counT = 0 ;\n\tfor (auto it : cnt)\n\t{\n\t\tcounT += ( it.second * (it.second - 1) ) / 2;\n\t}\n\n\treturn counT + vals.size();\n\n}\n\n};","compare_result":"11111011111011111011110011000101010100001001101110111110111110110111111010111111001000000101000000000001000000000000111000011111111","title_slug":"number-of-good-paths","has_notes":false,"flag_type":1}