{"id":666411419,"question_id":55,"lang":"cpp","lang_name":"C++","time":"2 years, 6 months","timestamp":1648129651,"status":10,"status_display":"Accepted","runtime":"91 ms","url":"/submissions/detail/666411419/","is_pending":"Not Pending","title":"Jump Game","memory":"48.4 MB","code":"class Solution {\npublic:\n  \n    bool canJump(vector<int>& nums) {\n        \n       int x = nums[0];\n        for(int i=0;i<nums.size();i++)\n        {\n            if(x < i) return false;\n            x = max(x , i + nums[i]);\n        }\n        return true;\n        \n    }\n};\n\n/*\n\nclass Solution {\npublic:\n    int dp[10009];\n    bool can(int pos,vector<int>& nums)\n    {\n        \n        if(pos>nums.size()-1 or nums[pos]==0) return false;\n        \n        if( nums.size() - 1 - pos <= nums[pos] ) return true;\n        \n        if(dp[pos]!=-1) return dp[pos];\n        \n        dp[pos] = 0;\n        for(int i=1;i<=nums[pos];i++)\n        {\n            dp[pos] |= can(pos + i , nums);\n        }\n        return dp[pos];\n    }\n    \n    bool canJump(vector<int>& nums) {\n        \n        if(nums.size()==1) return true;\n        memset(dp,  -1 ,sizeof(dp));\n        return can(0,nums);\n        \n    }\n};\n\n*/\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game","has_notes":false,"flag_type":1}