{"id":652425668,"question_id":2121,"lang":"cpp","lang_name":"C++","time":"2 years, 7 months","timestamp":1646289414,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/652425668/","is_pending":"Not Pending","title":"Find if Path Exists in Graph","memory":"N/A","code":"class Solution {\npublic:\n    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) {\n        \n        queue<int>Q;\n        vector<int>visit(300000,0);\n        Q.push(source);\n        int ans = -1;\n        while(Q.size() > 0)\n        {\n            int des = Q.front();\n            Q.pop();\n            if(des==destination)\n            {\n                ans = 1;\n                break;\n            }\n            \n            for(auto it : edges)\n            {\n                vector<int>vc = it;\n                if( (vc[0]==des or vc[1]==des) )\n                {\n                    if(des==vc[0])\n                    {\n                        if(visit[vc[1]]==false)\n                        {\n                            Q.push(vc[1]);\n                            visit[vc[1]] = true;\n                            \n                        }\n                    }\n                    if(des==vc[1])\n                    {\n                        if( visit[vc[0]] == false )\n                        {\n                            visit[vc[0]] = true;\n                            Q.push(vc[0]);\n                        }\n                        \n                    }\n                                      \n                    \n                }\n               \n            }\n         }\n                                     \n        if(ans==-1) return false;\n        else return true;\n        \n    }\n};","compare_result":"11111111111111111110000000","title_slug":"find-if-path-exists-in-graph","has_notes":false,"flag_type":1}