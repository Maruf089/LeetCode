{"id":653137445,"question_id":207,"lang":"cpp","lang_name":"C++","time":"2 years, 7 months","timestamp":1646385020,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/653137445/","is_pending":"Not Pending","title":"Course Schedule","memory":"N/A","code":"class Solution {\npublic:\n    \n    vector<int> adj[200000];\n    vector<bool> visited;\n    vector<int> parent;\n    int cycle_start, cycle_end;\n    \n    bool dfs(int v, int par)   // passing vertex and its parent vertex\n    {\n    visited[v] = true;\n    for (int u : adj[v])\n    {\n        if(u == par)\n            continue; // skipping edge to parent vertex\n        if (visited[u])\n        {\n            cycle_end = v;\n            cycle_start = u;\n            return true;\n        }\n        parent[u] = v;\n        if (dfs(u, parent[u]))\n            return true;\n    }\n    return false;\n    }\n    \n    bool canFinish(int n, vector<vector<int>>& prerequisites) {\n        \n    \n        for(auto it : prerequisites)\n        {\n            adj[it[0]].push_back(it[1]);\n            adj[it[1]].push_back(it[0]);\n        }\n        \n    visited.assign(n, false);\n    parent.assign(n, -1);\n    cycle_start = -1;\n        \n    \n        \n    for (int v = 0; v < n; v++)\n    {\n        if (!visited[v] && dfs(v, parent[v]))\n            break;\n    }\n\n    if (cycle_start == -1)\n    {\n        return true;\n    }\n    else return false;\n        \n    }\n};","compare_result":"111111110111111011111111111101101101110111010011011","title_slug":"course-schedule","has_notes":false,"flag_type":1}