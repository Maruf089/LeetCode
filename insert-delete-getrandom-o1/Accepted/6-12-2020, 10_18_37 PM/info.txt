{"id":352702043,"question_id":380,"lang":"cpp","lang_name":"C++","time":"4 years, 4 months","timestamp":1591978717,"status":10,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/352702043/","is_pending":"Not Pending","title":"Insert Delete GetRandom O(1)","memory":"22.8 MB","code":"class RandomizedSet {\n    vector<int>_nums;\n    unordered_map<int,int>_position;\npublic:\n    /** Initialize your data structure here. */\n    RandomizedSet() {\n        \n    }\n    \n    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */\n    bool insert(int val) {\n        if(_position.find(val)!=_position.end())\n            return false;\n        _nums.push_back(val);\n        _position[val] = _nums.size()-1;\n        return true;\n    }\n    \n    /** Removes a value from the set. Returns true if the set contained the specified element. */\n    bool remove(int val) {\n        if(_position.find(val)==_position.end())\n            return false;\n        int pos = _position[val];\n        _nums[pos] = _nums[_nums.size()-1];\n        _position[_nums[pos]] = pos ; \n        _nums.pop_back();\n        _position.erase(val);\n        return true;\n        \n    }\n    \n    /** Get a random element from the set. */\n    int getRandom() {\n        return _nums[rand()%_nums.size()];\n    }\n};\n\n/**\n * Your RandomizedSet object will be instantiated and called as such:\n * RandomizedSet* obj = new RandomizedSet();\n * bool param_1 = obj->insert(val);\n * bool param_2 = obj->remove(val);\n * int param_3 = obj->getRandom();\n */","compare_result":"111111111111111111","title_slug":"insert-delete-getrandom-o1","has_notes":false,"flag_type":1}