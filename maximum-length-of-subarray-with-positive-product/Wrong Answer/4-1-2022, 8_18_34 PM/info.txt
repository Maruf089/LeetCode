{"id":671644491,"question_id":1690,"lang":"cpp","lang_name":"C++","time":"2 years, 6 months","timestamp":1648822714,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/671644491/","is_pending":"Not Pending","title":"Maximum Length of Subarray With Positive Product","memory":"N/A","code":"class Solution {\npublic:\n    #define f0(i,b) for(int i=0;i<(b);i++)\n    #define f1(i,b) for(int i=1;i<=(b);i++)\n    #define ll long long int\n    #define pb push_back\n    #define sz size()\n    #define all(v) v.begin(),v.end()\n    int getMaxLen(vector<int>& nums) {\n        \n        vector<ll>vc , zero , minus;\n        int n = nums.size();\n        ll l,r;\n\t\tf0(i, n)\n\t\t{\n\t\t\tll a = nums[i];\n\t\t\tvc.pb(a);\n\t\t\tif (a < 0) minus.pb(i + 1);\n\t\t}\n\t\tvector<ll>minus_cum(n + 11), two(n + 11), cnt(n + 11);\n\n\n\t\tzero.pb(0);\n\t\tf0(i, n)\n\t\t{\n\n\t\t\tif ( abs(vc[i]) == 2) two[i + 1] = 1;\n\t\t\tif (vc[i] == 0) zero.pb(i + 1);\n\t\t\tif (vc[i] < 0) minus_cum[i + 1] = 1;\n\t\t}\n\t\tzero.pb(n + 1);\n\n\t\tf1(i, n + 9)\n\t\t{\n\t\t\ttwo[i] += two[i - 1] ;\n\t\t\tminus_cum[i] += minus_cum[i - 1];\n\t\t}\n\n\t\tll Max = -1;\n\t\tfor (int i = 0; i < zero.sz; i++)\n\t\t{\n\t\t\tif (i + 1 < zero.sz )\n\t\t\t{\n\t\t\t\tint prev = zero[i] , now = zero[i + 1];\n\n\t\t\t\tint minus_ase = (minus_cum[now] - minus_cum[prev]);\n\n\t\t\t\tif ( minus_ase % 2 == 0 )\n\t\t\t\t{\n\t\t\t\t\tll two_ase = two[now] - two[prev];\n\t\t\t\t\tif (two_ase > Max)\n\t\t\t\t\t{\n\t\t\t\t\t\tl = prev;\n\t\t\t\t\t\tr = now;\n\t\t\t\t\t\tMax = two_ase;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tint pos1 = upper_bound(all(minus), prev) - minus.begin();\n\t\t\t\t\tint pos2 = upper_bound(all(minus), now) - minus.begin();\n\t\t\t\t\tpos2--;\n\n\t\t\t\t\t/// samner minus\n\t\t\t\t\tll two_ase = two[now] - two[ minus[pos1]];\n\t\t\t\t\tif (two_ase > Max)\n\t\t\t\t\t{\n\t\t\t\t\t\tl = minus[pos1];\n\t\t\t\t\t\tr = now;\n\t\t\t\t\t\tMax = two_ase;\n\t\t\t\t\t}\n\n\t\t\t\t\ttwo_ase = two[minus[pos2] - 1] - two[prev];\n\t\t\t\t\tif (two_ase > Max)\n\t\t\t\t\t{\n\t\t\t\t\t\tl = prev;\n\t\t\t\t\t\tr = minus[pos2];\n\t\t\t\t\t\tMax = two_ase;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn n - (l << ' ' << max(0LL , n - 1LL * r + 1LL) ) ;\n    }\n};","compare_result":"1000000111000100000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-length-of-subarray-with-positive-product","has_notes":false,"flag_type":1}