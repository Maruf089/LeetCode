{"id":653686219,"question_id":310,"lang":"cpp","lang_name":"C++","time":"2 years, 7 months","timestamp":1646470440,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/653686219/","is_pending":"Not Pending","title":"Minimum Height Trees","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> findMinHeightTrees(int n, vector<vector<int>>& edges) {\n        \n        if(n==1) return {}; \n        \n        vector<int>vc[n];\n        vector<int>in(n , 0 );\n        \n        for(auto it : edges)\n        {\n            vc[it[0]].push_back(it[1]);\n            vc[it[1]].push_back(it[0]);\n            \n            in[it[0]]++;\n            in[it[1]]++;\n        }\n        \n        queue<int>Q;\n        for(int i=0;i<n;i++)\n        {\n            if(in[i]==1) Q.push(i);\n        }\n        \n        vector<int>res;\n        while(n > 2)  /// bcz at most 2 answer possible\n        {\n            int sz = Q.size();\n            n -= Q.size();\n            while(sz--)\n            {\n                int u = Q.front();\n                Q.pop();\n                \n                for(auto v : vc[u])\n                {\n                    in[v]--;\n                    if(in[v]==1)\n                    {\n                        Q.push(v);\n                    }\n                }\n            }\n            \n        }\n        \n        while(Q.size())\n        {\n            res.push_back(Q.front());\n            Q.pop();\n        }\n        \n        \n        return res;\n        \n    }\n};","compare_result":"11011111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-height-trees","has_notes":false,"flag_type":1}