{"id":1285632584,"question_id":523,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1718171808,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1285632584/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& vc, int k) {\n        long long arr[100000+9] = {0};\n        for(int i = 0 ; i < vc.size() ; i++){\n            arr[i + 1] = arr[i] + vc[i];\n        }\n        \n        bool f = false;\n        for(int i = 0 ; i < vc.size() ; i++){\n            long long subarraySum = 0 ; \n            for(int j = i + 1 ; j < vc.size(); j++){\n                subarraySum = (arr[j+1] - arr[i]);\n                // Step 4: Check if the Sum is a Multiple of k\n                if (subarraySum == 0 && k == 0) { // Handling special case where k is 0\n                    return true;\n                }\n                if (k != 0 && subarraySum % k == 0) {\n                    return true;\n                }\n            }\n        }\n        return false; \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000","title_slug":"continuous-subarray-sum","has_notes":false,"flag_type":1}