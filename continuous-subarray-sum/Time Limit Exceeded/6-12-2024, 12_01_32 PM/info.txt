{"id":1285637255,"question_id":523,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1718172092,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1285637255/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& nums, int k) {\n        int n = nums.size();\n        \n        // Step 1: Iterate Through Starting Points\n        for (int start = 0; start < n - 1; start++) {\n            // Step 2: Expand the Subarray\n            for (int end = start + 1; end < n; end++) {\n                // Step 3: Calculate the Sum\n                int subarraySum = 0;\n                for (int i = start; i <= end; i++) {\n                    subarraySum += nums[i];\n                }\n                \n                // Step 4: Check if the Sum is a Multiple of k\n                if (subarraySum == 0 && k == 0) { // Handling special case where k is 0\n                    return true;\n                }\n                if (k != 0 && subarraySum % k == 0) {\n                    return true;\n                }\n            }\n        }\n        \n        // Step 5: Return the Result\n        return false;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000","title_slug":"continuous-subarray-sum","has_notes":false,"flag_type":1}