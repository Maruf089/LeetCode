{"id":1280397208,"question_id":876,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1717752437,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/1280397208/","is_pending":"Not Pending","title":"Hand of Straights","memory":"23.1 MB","code":"class Solution {\npublic:\n    bool findSuccessors(vector<int>& hand, int groupSize, int i, int n) {\n        int next = hand[i] + 1;\n        hand[i] = -1;  // Mark as used\n        int count = 1;\n        i += 1;\n        while (i < n && count < groupSize) {\n            if (hand[i] == next) {\n                next = hand[i] + 1;\n                hand[i] = -1;\n                count++;\n            }\n            i++;\n        }\n        return count == groupSize;\n    }\n\n    bool isNStraightHand(vector<int>& hand, int groupSize) {\n        int n = hand.size();\n        if (n % groupSize != 0) return false;\n        std::sort(hand.begin(), hand.end());\n        for (int i = 0; i < n; i++) {\n            if (hand[i] >= 0) {\n                if (!findSuccessors(hand, groupSize, i, n)) return false;\n            }\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"hand-of-straights","has_notes":false,"flag_type":1}