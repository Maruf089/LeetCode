{"id":663050409,"question_id":2310,"lang":"cpp","lang_name":"C++","time":"2 years, 7 months","timestamp":1647702108,"status":10,"status_display":"Accepted","runtime":"236 ms","url":"/submissions/detail/663050409/","is_pending":"Not Pending","title":"Minimum Operations to Halve Array Sum","memory":"89.4 MB","code":"class Solution {\npublic:\n    int halveArray(vector<int>& nums) {\n\n        int counT = 0 ;\n        double sum = 0 ;\n        priority_queue<double>Q;\n\n        for(auto it : nums)\n        {\n            double d = it*1.00;\n            sum += d;\n            Q.push(d);\n        }\n\n        double half = (sum * 1.00)  / 2.00 ;\n\n      //  dbg(sum , half, Q.size());\n\n        while(1)\n        {\n         //   dbg(sum , half);\n\n            if(sum <= half ) break;\n\n            counT++;\n            auto it = Q.top();\n            Q.pop();\n            double d = ( ( (double)(it)*1.00 ) / 2.00 ) ;\n            sum -=  d ;\n            Q.push(d);\n\n         //   cout << it << ' ' << d << ' ' << counT << endl;\n\n        }\n\n        return counT;\n\n}\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-operations-to-halve-array-sum","has_notes":false,"flag_type":1}